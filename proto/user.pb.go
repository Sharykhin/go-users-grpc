// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	CreateUserRequest
	UpdateUserRequest
	UserResponse
	UserListReponse
	UserID
	Empty
	UserFilter
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateUserRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Activated bool   `protobuf:"varint,3,opt,name=activated" json:"activated,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserRequest) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

type UpdateUserRequest struct {
	// Types that are valid to be assigned to Name:
	//	*UpdateUserRequest_NameNull
	//	*UpdateUserRequest_NameValue
	Name isUpdateUserRequest_Name `protobuf_oneof:"name"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isUpdateUserRequest_Name interface {
	isUpdateUserRequest_Name()
}

type UpdateUserRequest_NameNull struct {
	NameNull bool `protobuf:"varint,1,opt,name=name_null,json=nameNull,oneof"`
}
type UpdateUserRequest_NameValue struct {
	NameValue string `protobuf:"bytes,2,opt,name=name_value,json=nameValue,oneof"`
}

func (*UpdateUserRequest_NameNull) isUpdateUserRequest_Name()  {}
func (*UpdateUserRequest_NameValue) isUpdateUserRequest_Name() {}

func (m *UpdateUserRequest) GetName() isUpdateUserRequest_Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateUserRequest) GetNameNull() bool {
	if x, ok := m.GetName().(*UpdateUserRequest_NameNull); ok {
		return x.NameNull
	}
	return false
}

func (m *UpdateUserRequest) GetNameValue() string {
	if x, ok := m.GetName().(*UpdateUserRequest_NameValue); ok {
		return x.NameValue
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateUserRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateUserRequest_OneofMarshaler, _UpdateUserRequest_OneofUnmarshaler, _UpdateUserRequest_OneofSizer, []interface{}{
		(*UpdateUserRequest_NameNull)(nil),
		(*UpdateUserRequest_NameValue)(nil),
	}
}

func _UpdateUserRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateUserRequest)
	// name
	switch x := m.Name.(type) {
	case *UpdateUserRequest_NameNull:
		t := uint64(0)
		if x.NameNull {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *UpdateUserRequest_NameValue:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.NameValue)
	case nil:
	default:
		return fmt.Errorf("UpdateUserRequest.Name has unexpected type %T", x)
	}
	return nil
}

func _UpdateUserRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateUserRequest)
	switch tag {
	case 1: // name.name_null
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Name = &UpdateUserRequest_NameNull{x != 0}
		return true, err
	case 2: // name.name_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Name = &UpdateUserRequest_NameValue{x}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateUserRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateUserRequest)
	// name
	switch x := m.Name.(type) {
	case *UpdateUserRequest_NameNull:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += 1
	case *UpdateUserRequest_NameValue:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.NameValue)))
		n += len(x.NameValue)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UserResponse struct {
	ID        string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Activated bool   `protobuf:"varint,4,opt,name=activated" json:"activated,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *UserResponse) Reset()                    { *m = UserResponse{} }
func (m *UserResponse) String() string            { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()               {}
func (*UserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserResponse) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

func (m *UserResponse) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type UserListReponse struct {
	Users []*UserResponse `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *UserListReponse) Reset()                    { *m = UserListReponse{} }
func (m *UserListReponse) String() string            { return proto.CompactTextString(m) }
func (*UserListReponse) ProtoMessage()               {}
func (*UserListReponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserListReponse) GetUsers() []*UserResponse {
	if m != nil {
		return m.Users
	}
	return nil
}

type UserID struct {
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
}

func (m *UserID) Reset()                    { *m = UserID{} }
func (m *UserID) String() string            { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()               {}
func (*UserID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type UserFilter struct {
	Limit  int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *UserFilter) Reset()                    { *m = UserFilter{} }
func (m *UserFilter) String() string            { return proto.CompactTextString(m) }
func (*UserFilter) ProtoMessage()               {}
func (*UserFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UserFilter) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *UserFilter) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "user.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "user.UpdateUserRequest")
	proto.RegisterType((*UserResponse)(nil), "user.UserResponse")
	proto.RegisterType((*UserListReponse)(nil), "user.UserListReponse")
	proto.RegisterType((*UserID)(nil), "user.UserID")
	proto.RegisterType((*Empty)(nil), "user.Empty")
	proto.RegisterType((*UserFilter)(nil), "user.UserFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	Users(ctx context.Context, in *UserFilter, opts ...grpc.CallOption) (*UserListReponse, error)
	Remove(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Empty, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/user.User/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Users(ctx context.Context, in *UserFilter, opts ...grpc.CallOption) (*UserListReponse, error) {
	out := new(UserListReponse)
	err := grpc.Invoke(ctx, "/user.User/Users", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Remove(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/user.User/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*UserResponse, error)
	Users(context.Context, *UserFilter) (*UserListReponse, error)
	Remove(context.Context, *UserID) (*Empty, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Users_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Users(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Users",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Users(ctx, req.(*UserFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Remove(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _User_CreateUser_Handler,
		},
		{
			MethodName: "Users",
			Handler:    _User_Users_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _User_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcd, 0x6a, 0xdb, 0x40,
	0x10, 0xc7, 0xf5, 0x5d, 0x6b, 0x6c, 0xfa, 0x31, 0xf4, 0x43, 0x98, 0x9a, 0x9a, 0x85, 0x82, 0x4e,
	0x3e, 0xb8, 0xb7, 0xfa, 0xd4, 0x56, 0x2d, 0x16, 0x94, 0x1c, 0x16, 0x9c, 0x4b, 0x0e, 0x46, 0xb1,
	0xc7, 0x20, 0x58, 0x59, 0x8a, 0x76, 0x65, 0xc8, 0x03, 0xe4, 0x35, 0xf2, 0xac, 0x61, 0x77, 0x4d,
	0x64, 0x1c, 0xe7, 0xb6, 0xf3, 0xdf, 0x99, 0xd9, 0xdf, 0x7f, 0x66, 0x01, 0x3a, 0x49, 0xed, 0xac,
	0x69, 0x6b, 0x55, 0x63, 0xa0, 0xcf, 0xec, 0x06, 0x3e, 0xfc, 0x69, 0xa9, 0x50, 0xb4, 0x92, 0xd4,
	0x72, 0xba, 0xeb, 0x48, 0x2a, 0x44, 0x08, 0xf6, 0x45, 0x45, 0x89, 0x3b, 0x75, 0xd3, 0x98, 0x9b,
	0x33, 0x7e, 0x84, 0x90, 0xaa, 0xa2, 0x14, 0x89, 0x67, 0x44, 0x1b, 0xe0, 0x57, 0x88, 0x8b, 0x8d,
	0x2a, 0x0f, 0x85, 0xa2, 0x6d, 0xe2, 0x4f, 0xdd, 0x74, 0xc0, 0x7b, 0x41, 0x37, 0x5f, 0x35, 0xdb,
	0xb3, 0xe6, 0x13, 0x88, 0x75, 0xc3, 0xf5, 0xbe, 0x13, 0xc2, 0xbc, 0x30, 0x58, 0x3a, 0x7c, 0xa0,
	0xa5, 0xab, 0x4e, 0x08, 0xfc, 0x06, 0x60, 0xae, 0x0f, 0x85, 0xe8, 0xc8, 0x3e, 0xb6, 0x74, 0xb8,
	0x29, 0xb9, 0xd6, 0xd2, 0xef, 0xc8, 0xc2, 0xb1, 0x07, 0x17, 0x46, 0xb6, 0xaf, 0x6c, 0xea, 0xbd,
	0x24, 0x7c, 0x0b, 0x5e, 0x9e, 0x1d, 0x99, 0xbd, 0x3c, 0x7b, 0x76, 0xe1, 0x5d, 0x72, 0xe1, 0xbf,
	0xea, 0x22, 0x38, 0x73, 0x81, 0x13, 0x80, 0x8d, 0x19, 0xd1, 0x76, 0x5d, 0xa8, 0x24, 0x34, 0x85,
	0xf1, 0x51, 0xf9, 0xa5, 0xd8, 0x02, 0xde, 0x69, 0x8c, 0xff, 0xa5, 0x54, 0x9c, 0x2c, 0x49, 0x0a,
	0xa1, 0x1e, 0xae, 0x4c, 0xdc, 0xa9, 0x9f, 0x0e, 0xe7, 0x38, 0x33, 0x63, 0x3f, 0x85, 0xe5, 0x36,
	0x81, 0x25, 0x10, 0x69, 0x39, 0xcf, 0xce, 0xe9, 0xd9, 0x1b, 0x08, 0xff, 0x56, 0x8d, 0xba, 0x67,
	0x3f, 0x01, 0x74, 0xca, 0xbf, 0x52, 0x28, 0x6a, 0xb5, 0x01, 0x51, 0x56, 0xa5, 0x32, 0x99, 0x3e,
	0xb7, 0x01, 0x7e, 0x86, 0xa8, 0xde, 0xed, 0x24, 0x29, 0x63, 0xd6, 0xe7, 0xc7, 0x68, 0xfe, 0xe8,
	0x42, 0xa0, 0x8b, 0x71, 0x01, 0xd0, 0xaf, 0x19, 0xbf, 0x58, 0xa0, 0x17, 0x8b, 0x1f, 0x5f, 0x20,
	0x65, 0x0e, 0xce, 0x21, 0xd4, 0x8a, 0xc4, 0xf7, 0xfd, 0xb5, 0xc5, 0x19, 0x7f, 0xea, 0x95, 0x93,
	0x01, 0x30, 0x07, 0xbf, 0x43, 0xc4, 0xa9, 0xaa, 0x0f, 0x84, 0xa3, 0x3e, 0x25, 0xcf, 0xc6, 0x43,
	0x1b, 0x59, 0x6b, 0xce, 0x6d, 0x64, 0xfe, 0xe2, 0x8f, 0xa7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0,
	0x60, 0x9b, 0x74, 0x99, 0x02, 0x00, 0x00,
}
